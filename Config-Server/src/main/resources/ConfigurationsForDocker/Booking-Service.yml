management:
  endpoints:
    web:
      exposure:
        include: shutdown, beans
  endpoint:
    shutdown:
      enabled: 'true'
spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      properties:
        spring:
          json:
            use:
              type:
                headers: 'false'
            value:
              default:
                type: com.example.Booking.Service.DTO.BookingResponse
            trusted:
              packages: '*'
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  application:
    name: Booking-Service
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    database: ${SPRING_DATASOURCE_DATABASE}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  cloud:
    config:
      fail-fast: true
  retry:
    enabled: true
    maxAttempts: 10
    initialInterval: 2000
logging:
  file:
    name: Booking-Service.logs
  level:
    root: info
server:
  port: '8082'
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
